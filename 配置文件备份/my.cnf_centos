#
# The MySQL database server configuration file.
#
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
# 
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.



[client]
port		= 3306
socket		= /var/run/mysqld/mysqld.sock
default-character-set=utf8

# This was formally known as [safe_mysqld]. Both versions are currently parsed.
[mysqld_safe]
socket		= /var/run/mysqld/mysqld.sock
nice		= 0
[mysqld]
#=================================================================    server begin   ==================================================================
user		= mysql
socket		= /var/run/mysqld/mysqld.sock
port		= 3306
basedir		= /usr

#数据文件，日志文件目录
datadir		= /mnt/mysql_data
tmpdir		= /tmp
default-character-set=utf8

#避免外部锁定(默认是ON). 对应variable的skip_external_locking
skip-external-locking
bind-address = 127.0.0.1
#连接进程帧听队列的大小
back_log = 50
max_connections=100
#连接500次发生错误之后，屏蔽从该host的所有连接
max_connect_errors = 500
#通信缓冲区的最大长度。包或任何生成的/中间字符串的最大大小。
max_allowed_packet = 32M
#在查询之间将通信缓冲区重设为该值。如果语句超出该长度，缓冲区自动扩大，直到max_allowed_packet字节。
net_buffer_length = 8K

key_buffer		= 16M
max_allowed_packet	= 16M
#**********************************************************    query setting    **********************************************************************

#****************************************************************************************
# Set key_buffer to 5 - 50% of your RAM depending on how much you use MyISAM tables, 
# but keep key_buffer_size + InnoDB buffer pool size < 80% of your RAM
# innodb_buffer_pool_size+key_buffer_size+max_connections*(sort_buffer_size+read_buffer_size+binlog_cache_size)+ max_connections*2MB < 2GB(server memory).
#****************************************************************************************


#索引缓冲区(仅作用于MYISAM表和临时表)，决定了数据库索引处理的速度
key_buffer_size = 128M

#所有线程打开的表的数目(一个表使用2个文件描述符)，表数量多，就要大一些。增大该值可以增加mysqld需要的文件描述符的数量。可以检查Opened_tables(已经打开的表的数量)状态变量来检查你是否需要增加表缓存。
table_cache = 2048

#每个排序线程分配的缓冲区的大小。增加该值可以加快ORDER BY或GROUP BY操作
sort_buffer_size = 5M

#每个线程连续扫描时为扫描的每个表分配的缓冲区的大小,如果进行多次连续扫描，可能需要增加该值
read_buffer_size = 1M

#用于完全联接的缓冲区的大小(当不使用索引的时候使用联接操作)。
#一般情况获得快速联接的最好方法是添加索引。当增加索引时不可能通过增加join_buffer_size值来获得快速完全联接。
#将为两个表之间的每个完全联接分配联接缓冲区。对于多个表之间不使用索引的复杂联接，需要多联接缓冲区。
join_buffer_size = 8M

#服务器应缓存多少线程以便重新使用。当客户端断开连接时，如果线程少于thread_cache_size，则客户端的线程被放入缓存。
#如果状态变量Threads_created(创建用来处理连接的线程数)较大，你可能要增加thread_cache_size值。缓存访问率的计算方法Threads_created/Connections(试图连接到(不管是否成功)MySQL服务器的连接数)
#1G: 8;   2G: 16;    3G: 32;   >3G: 64
thread_cache_size = 8

myisam-recover         = BACKUP

#使应用程序向线程系统提供需要同时运行的期望的线程数目的提示
thread_concurrency = 8

#为缓存查询结果分配的内存的数量，加快查询的速度。默认值是0，即禁用查询缓存。
query_cache_size = 64M

#不要缓存大于该值的结果，默认值是1048576(1MB)
query_cache_limit = 2M

#ft_min_word_len和ft_max_word_len表示FULLTEXT索引的最小和最大字长
ft_min_word_len = 4

#每个线程的堆栈大小
thread_stack = 192K

#事务隔离级别。READ-UNCOMMITTED: 未提交读会出现脏读、不可重复读、幻读 ( 隔离级别最低，并发性能高 ) ；READ-COMMITTED: 提交读会出现不可重复读、幻读问题（锁定正在读取的行）；REPEATABLE-READ: 默认值，可重复读会出幻读（锁定所读取的所有行）；SERIALIZABLE: 序列化保证所有的情况不会发生（锁表）
transaction_isolation = REPEATABLE-READ

#联合查询或者view的时候，可能会建立临时表，如果在磁盘上建的话，会导致性能低，设置此值可以一定程度上加快速度
tmp_table_size = 64M

#当排序后按排序后的顺序读取行时，则通过该缓冲区读取行，避免搜索硬盘。将该变量设置为较大的值可以大大改进ORDER BY的性能。但是，这是为每个客户端分配的缓冲区，因此你不应将全局变量设置为较大的值。相反，只为需要运行大查询的客户端更改会话变量。
read_rnd_buffer_size = 2M


log_error                = /var/log/mysql/error.log
expire_logs_days	= 10
max_binlog_size         = 100M


#**********************************************************    innodb setting    **********************************************************************

default-storage-engine=INNODB
#skip-innodb

innodb_file_per_table

#innodb_log_group_home_dir = /tmp/
#innodb_data_home_dir = /tmp/
# Data files must be able to hold your data and indexes, they are in two different disks.
innodb_data_file_path = ibdata1:10M:autoextend

# Set buffer pool size to 50-80% of your computer's memory,
# but make sure on Linux x86 total memory usage is < 2GB
innodb_buffer_pool_size=500M
innodb_additional_mem_pool_size=16M

# Set the log file size to about 25% of the buffer pool size
#innodb_log_file_size=256M

#InnoDB 将日志写入日志磁盘文件前的缓冲大小。理想值为 1M 至 8M。大的日志缓冲允许事务运行时不需要将日志保存入磁盘而只到事务被提交(commit)。因此，如果有大的事务，设置大的日志缓冲可以减少磁盘I/O。
#innodb_log_buffer_size=8M

#InnoDB 中的文件 I/O 线程。通常设置为 4
innodb_file_io_threads = 4

#并发线程。2*(内核数量+磁盘数量)
innodb_thread_concurrency = 16

[mysqldump]
quick
quote-names
max_allowed_packet	= 16M

[mysql]
#no-auto-rehash	# faster start of mysql but no tab completition

[isamchk]
key_buffer		= 16M
sort_buffer_size = 20M
read_buffer = 2M
write_buffer = 2M


 
#[mysqlhotcopy]
#interactive-timeout
#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#
#!includedir /etc/mysql/conf.d/
